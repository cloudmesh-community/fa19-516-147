openapi: "3.0.2"
info:
  version: 3.2.0
  x-date: 17-06-2019
  x-status: defined
  title: Database
  description: |-

    The database specification allows to register a database and perform
    elementary operations to use this database. We distinguish actions
    related to the registration, the adding of a schema, the insertion of
    data and the query of data. The data base is defined by a name an endpoint
    (e.g., host, port), and a protocol used (e.g., SQL, MongoDB, graphgl, and
     others).

  termsOfService: "https://github.com/cloudmesh/cloudmesh-nist/blob/master/LICENSE.txt"
  contact:
    name: NIST BDRA Interface Subgroup
    url: https://cloudmesh-community.github.io/nist/spec/
  license:
    name: Apache 2.0
    url: https://github.com/cloudmesh/cloudmesh-nist/blob/master/LICENSE.txt
servers:
  - url: /cloudmesh/v3
paths:
  /database:
    get:
      tags:
        - "Database Registry"
      summary: Returns all databases
      description: Returns name of all databases availble in database instance
      operationId: cloudmesh.database.get
      responses:
        '200':
          description: List of databases
          content:
            application/json:
              schema:
                type: string
        '401':
          description: Not authorized
        '404':
          description: Named database not found
    put:
      tags:
        - "Database Registry"
      summary: "Create database"
      description: "Create a database in a Database instance"
      operationId: cloudmesh.database.put
      parameters:
        - name: dbname
          description: Name of the database
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "Database successfully created"
          content:
            application/json:
              schema:
                type: string
        '401':
          description: Not authorized
        '404':
          description: Named database not found
    delete:
      tags:
        - "Database Registry"
      summary: "Delete a database from a database instance"
      description: ""
      operationId: cloudmesh.database.delete
      parameters:
        - name: dbname
          description: Name of the database
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "Database successfully deleted"
          content:
            application/json:
              schema:
                type: string
        '401':
          description: Not authorized
        '404':
          description: Named database not found
  /database/{dbname}/schema/{schname}:
    get:
      tags:
      - "Database Schema"
      summary: Get the list of the schemas in a database
      description: ""
      operationId: "cloudmesh.database.get_schema"
      parameters:
        - name: dbname
          description: Name of the database
          in: path
          required: true
          schema:
            type: string
        - name: schname
          description: Name of the schema , enter value ALL or enter schema name
          in: path
          required: false
          schema:
            type: string
      responses:
        '200':
          description: "successfully returned the schema list"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Schema"
        '401':
          description: Not authorized
        '404':
          description: Named Schema not found
    put:
      tags:
      - "Database Schema"
      summary: "Create a schema in a database"
      description: ""
      operationId: "cloudmesh.database.put_schema"
      parameters:
        - name: dbname
          description: Name of the schema
          in: path
          required: true
          schema:
            type: string
        - name: schname
          description: Name of the schema
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "successfully returned the list"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Schema"
        '401':
          description: Not authorized
        '404':
          description: Named database not found
    delete:
      tags:
        - "Database Schema"
      summary: Deletes a schema from the list of databases schemas
      description: Deletes a schema from the list of databases schemas
      operationId: cloudmesh.database.delete_schema
      parameters:
        - name: dbname
          description: Name of the schema
          in: path
          required: true
          schema:
            type: string
        - name: schname
          description: Name of the schema
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Deletion successful
        '401':
          description: Not authorized
        '404':
          description: Named schema not found
  /database{dbname}/schema/{schname}/table/{tblname}/data:
    get:
      tags:
      - "Database Table Data"
      summary: Query the database schema table
      description: Query the database schema table
      operationId: "cloudmesh.database.data_get"
      parameters:
        - name: dbname
          description: Name of the database
          in: path
          required: true
          schema:
            type: string
        - name: schname
          description: Name of the database
          in: path
          required: true
          schema:
            type: string
        - in: path
          name: tblname
          description: Database Query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfull query
          content:
            application/json:
              schema:
                type: string
                items:
                  $ref: "#/components/schemas/Record"
        '401':
          description: Not authorized
        '404':
          description: Named database not found
    put:
      tags:
      - "Database Table Data"
      summary: "add data to the table or collection"
      description: ""
      operationId: "cloudmesh.database.data_put"
      parameters:
        - name: dbname
          description: Name of the database
          in: path
          required: true
          schema:
            type: string
        - name: schname
          description: Name of the schema
          in: path
          required: true
          schema:
            type: string
        - name: tblname
          description: "Database query"
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Record to be uploaded
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Record"
      responses:
        '200':
          description: "successfully uploaded"
          content:
            application/json:
              schema:
                type: string
        '401':
          description: Not authorized
        '404':
          description: Named database not founjsond
    delete:
      tags:
      - "Database Table Data"
      summary: "Delete the database objects matching the query"
      description: ""
      operationId: "cloudmesh.database.data_delete"
      parameters:
        - name: dbname
          description: Name of the database
          in: path
          required: true
          schema:
            type: string
        - name: schname
          description: Name of the database schema
          in: path
          required: true
          schema:
            type: string
        - name: tblname
          description: Database table
          in: path
          required: true
          schema:
            type: string
        - name: query
          description: value to be deleted
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/Query'
      responses:
        '200':
          description: Successfull query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Record"
        '401':
          description: Not authorized
        '404':
          description: Named database not found
  /database/{dbname}/schema/{schname}/table/{tblname}:
    get:
      tags:
        - "Database Table"
      summary: Get the list of the columns in a tables
      description: ""
      operationId: "cloudmesh.database.get_table"
      parameters:
        - name: dbname
          description: "Enter name of the database"
          in: path
          required: true
          schema:
           type: string
        - name: schname
          description: "Enter name of the schema"
          in: path
          required: true
          schema:
            type: string
        - name: tblname
          description: "Enter name of the table or type ALL to get list of tables"
          in: path
          required: false
          schema:
            type: string
      responses:
        '200':
          description: "successfully returned the tables"
          content:
            application/json:
              schema:
                type: string
                items:
                  $ref: "#/components/schemas/Table"
        '401':
          description: Not authorized
        '404':
          description: Named database not found
    put:
      tags:
        - "Database Table"
      summary: "Create  a table in a required schema"
      description: ""
      operationId: "cloudmesh.database.put_table"
      parameters:
        - name: dbname
          description: "Enter name of the database where table to be created"
          in: path
          required: true
          schema:
            type: string
        - name: schname
          description: "Enter name of the schema where table to be created"
          in: path
          required: true
          schema:
            type: string
        - name: tblname
          description: "Enter name of the table to be created along with structure ex. <tablename>(<col1 <datatype> , <col2 <datatype> , ..,...)"
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "successfully table created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Table"
        '401':
          description: Not authorized
        '404':
          description: Named database not found
    delete:
      tags:
        - "Database Table"
      summary: Deletes a table from a given database schema
      description: Deletes a table from a given database schema
      operationId: "cloudmesh.database.delete_table"
      parameters:
        - name: dbname
          description: "Enter name of the database from which table to be deleted"
          in: path
          required: true
          schema:
            type: string
        - name: schname
          description: "Enter name of the database schema from which table to be deleted"
          in: path
          required: true
          schema:
            type: string
        - name: tblname
          description: "Enter name of the table which to be deleted/ dropped"
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "Table Deletion successful"
        '401':
          description: Not authorized
        '404':
          description: Named table not found
components:
  schemas:
    Database:
      type: object
      description: Defines a database object as an entry
      properties:
        name:
          type: string
          description: list of the databases
    Schema:
      type: object
      description: Defines a database schema
      properties:
        name:
          type: string
          description: Name of the database schema
        description:
          type: string
          description: Description of the database schema
        kind:
          type: string
          description: The kind of the definition
        content:
           type: string
           description: The schema associated with the table or collection
    Record:
      type: object
      description: The result of a query
      properties:
        col1:
          type: integer
          description: The status of the reurn
        col2:
          type: string
          description: The result of the query in json string format
        col3:
          type: string
          description: The result of the query in json string format
        col4:
          type: string
          description: The result of the query in json string format
        col5:
          type: string
          description: The result of the query in json string format
        col6:
          type: string
          description: The result of the query in json string format
        col7:
          type: string
          description: The result of the query in json string format
    Query:
      type: object
      description: The  query
      properties:
        col1:
          type: string
        val1:
          type: string
          description: The query string
    Table:
      type: object
      description: The  table
      properties:
        status:
          type: string
          description: Table